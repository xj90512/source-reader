# 官方文档 [跨平台编译](https://tauri.app/zh-cn/v1/guides/building/cross-platform#tauri-github-action)
# tauri 跨平台编译 [Tauri 入门篇 - 跨平台编译](https://zhuanlan.zhihu.com/p/533828038)
# 可选，将显示在 GitHub 存储库的"操作"选项卡中的工作流名称
# 创建 tag
#  git tag v0.1.0
# 推送 tag
#  git push --tag
name: Release CI

# 指定此工作流的触发器
on:
  push:
    # 匹配特定标签 (refs/tags)
    tags:
      - 'v*' # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流

# 为工作流添加权限
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

# 需要运行的作业组合
jobs:
  # 任务：创建 release 版本
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v3
      # 查询版本号（tag）
      - name: Query version number
        id: get_version
        shell: bash
        run: |
          echo "using version tag ${GITHUB_REF:10}"
          echo "version=${GITHUB_REF:10}" >> $GITHUB_OUTPUT

      # 替换旧的 create-release action，使用更新的 release creation
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: 'app ${{ steps.get_version.outputs.version }}'
          body: 'See the assets to download this version and install.'
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  # 编译 Tauri
  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]  # 只保留 macOS 平台

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      # 安装 Node.js - 更新到更高版本
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 安装 Rust
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          components: rustfmt, clippy

      # 移除 Ubuntu 特定依赖安装步骤，因为我们不再构建 Ubuntu 版本
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      # 可选，如果需要将 Rust 编译为 wasm，则安装 wasm-pack
      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: v0.9.1

      # 可选，如果需要使用 rsw 构建 wasm，则安装 rsw
      - name: Install rsw
        run: cargo install rsw

      # 确保安装依赖并验证安装结果
      - name: Install dependencies
        run: |
          yarn install
          yarn add @tauri-apps/cli@latest
          yarn add @tauri-apps/api@latest
          
      # 构建前清理
      - name: Clean build artifacts
        run: |
          rm -rf node_modules
          rm -rf dist
          rm -rf src-tauri/target
          
      # 重新安装依赖
      - name: Reinstall dependencies
        run: yarn install
          
      # 使用 npx 执行 vite build 命令
      - name: Build Frontend
        env:
          NODE_ENV: production
          VITE_APP_VERSION: ${{ github.ref_name }}
        run: |
          yarn build
          
      # Tauri 构建
      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
